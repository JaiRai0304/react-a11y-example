{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/trichards/Code/Repos/Training/react-a11y-example/src/pages/home.js\";\n\nimport React from \"react\";\n\nvar home = function home() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, \"Example A11y React Application\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, \"This application is used to help guide and teach React users how to create accessible applications that can be used by all users.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, \"React has always been very conscious of accessibility, but unfortunately gets a bad reputation in the accessibility community because it falls under a Single-Page Application. Single-page applications have always had their issues when it comes to accessibility. Initially created to speed up websites, single-page apps put more work on the client as opposed to relying on the usual server/response method.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, \"Typically loaded in a single-page frame (body), any changes within the page or between pages are \\u2018injected\\u2019 onto the page. As a single-page application framework, accessibility is supported very well compared to other application frameworks. The other added benefit within React is accessibility does not just work at a high level but also is much more fluid and detailed at a component level in React. Accessibility in React comes down to using the support and tools built into the framework itself and having an awareness of the issues that it can bring to the table from an accessibility standpoint.\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, \"React A11y Guidance: \"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://reactjs.org/docs/accessibility.html\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"React Accessibility Documentation\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/reactjs/react-a11y\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"React-A11y\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/dequelabs/react-axe\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"React-Axe\"))));\n};\n\nexport default home;","map":{"version":3,"sources":["/Users/trichards/Code/Repos/Training/react-a11y-example/src/pages/home.js"],"names":["React","home"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,sBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yIAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6ZANF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4mBAdF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,eA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BA1BF,eA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,IAAI,EAAC,6CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,IAAI,EAAC,uCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CANF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,IAAI,EAAC,wCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CATF,CA3BF,CADW;AAAA,CAAb;;AA2CA,eAAeA,IAAf","sourcesContent":["import React from \"react\";\n\nconst home = () => (\n  <div>\n    <h1>Example A11y React Application</h1>\n    <p>\n      This application is used to help guide and teach React users how to create\n      accessible applications that can be used by all users.\n    </p>\n    <p>\n      React has always been very conscious of accessibility, but unfortunately\n      gets a bad reputation in the accessibility community because it falls\n      under a Single-Page Application. Single-page applications have always had\n      their issues when it comes to accessibility. Initially created to speed up\n      websites, single-page apps put more work on the client as opposed to\n      relying on the usual server/response method.\n    </p>\n    <p>\n      Typically loaded in a single-page frame (body), any changes within the\n      page or between pages are ‘injected’ onto the page. As a single-page\n      application framework, accessibility is supported very well compared to\n      other application frameworks. The other added benefit within React is\n      accessibility does not just work at a high level but also is much more\n      fluid and detailed at a component level in React. Accessibility in React\n      comes down to using the support and tools built into the framework itself\n      and having an awareness of the issues that it can bring to the table from\n      an accessibility standpoint.\n    </p>\n    <br />\n    <p>React A11y Guidance: </p>\n    <ul>\n      <li>\n        <a href=\"https://reactjs.org/docs/accessibility.html\">\n          React Accessibility Documentation\n        </a>\n      </li>\n      <li>\n        <a href=\"https://github.com/reactjs/react-a11y\">React-A11y</a>\n      </li>\n      <li>\n        <a href=\"https://github.com/dequelabs/react-axe\">React-Axe</a>\n      </li>\n    </ul>\n  </div>\n);\nexport default home;\n"]},"metadata":{},"sourceType":"module"}