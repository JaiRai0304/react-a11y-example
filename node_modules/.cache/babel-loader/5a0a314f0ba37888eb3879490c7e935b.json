{"ast":null,"code":"import _classCallCheck from \"/Users/trichards/Code/Repos/Training/react-a11y-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/trichards/Code/Repos/Training/react-a11y-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/trichards/Code/Repos/Training/react-a11y-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/trichards/Code/Repos/Training/react-a11y-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/trichards/Code/Repos/Training/react-a11y-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/trichards/Code/Repos/Training/react-a11y-example/src/pages/focus.js\";\nimport React, { Component } from \"react\";\nimport Alert from \"../components/alert\";\nimport Helmet from \"react-helmet\";\nimport Modal from \"react-modal\";\nModal.setAppElement(document.getElementById(\"root\"));\nvar customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\n\nvar FocusManage = /*#__PURE__*/function (_Component) {\n  _inherits(FocusManage, _Component);\n\n  var _super = _createSuper(FocusManage);\n\n  function FocusManage(props) {\n    var _this;\n\n    _classCallCheck(this, FocusManage);\n\n    _this = _super.call(this, props);\n    _this.onInputClick = _this.onInputClick.bind(_assertThisInitialized(_this));\n    _this.onManualClick = _this.onManualClick.bind(_assertThisInitialized(_this));\n    _this.onModalClick = _this.onModalClick.bind(_assertThisInitialized(_this));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_this));\n    _this.state = {\n      showResults: false,\n      showManual: false,\n      showModal: false\n    };\n    return _this;\n  }\n\n  _createClass(FocusManage, [{\n    key: \"onInputClick\",\n    value: function onInputClick() {\n      this.setState({\n        showResults: true\n      });\n    }\n  }, {\n    key: \"onManualClick\",\n    value: function onManualClick() {\n      this.setState({\n        showManual: true\n      });\n    }\n  }, {\n    key: \"onModalClick\",\n    value: function onModalClick() {\n      this.setState({\n        showModal: true\n      });\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState({\n        showModal: false\n      });\n    }\n  }, {\n    key: \"afterOpenModal\",\n    value: function afterOpenModal() {\n      document.getElementById(\"modalHeader\").focus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        tabIndex: \"-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, \"Focus Management\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, \"Manual Managing Focus\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, \"This shows the use of manually setting focus for a rendered component using \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, \"componentDidMount()\")), this.state.showManual ? /*#__PURE__*/React.createElement(Alert, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"fname\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, \"Type some text here: \"), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"fname\",\n        type: \"text\",\n        name: \"fname\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary btn-large\",\n        onClick: this.onManualClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, \"Submit Text\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, \"Modal\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, \"This shows the use of react-modal straight from the react framework. Out of the box this is accessible. The one change made is putting focus on the top level heading in the modal itself.\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary btn-large\",\n        onClick: this.onModalClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, \"Show Modal\"), /*#__PURE__*/React.createElement(Modal, {\n        isOpen: this.state.showModal,\n        onAfterOpen: this.afterOpenModal,\n        onRequestClose: this.closeModal,\n        contentLabel: \"Example Modal\",\n        style: customStyles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        id: \"modalHeader\",\n        tabIndex: \"-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, \"Modal Example\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, \"I am a modal and this is my content below\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary btn-large\",\n        onClick: this.closeModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, \"close\")), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, \"Auto Focus\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }, \"This shows the use of autofocus on a input field. Note this only works if the input field is injected onto the page.\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary btn-large\",\n        onClick: this.onInputClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, \"Show Input\"), this.state.showResults ? /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        autoFocus: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }) : null);\n    }\n  }]);\n\n  return FocusManage;\n}(Component);\n\nexport default FocusManage;","map":{"version":3,"sources":["/Users/trichards/Code/Repos/Training/react-a11y-example/src/pages/focus.js"],"names":["React","Component","Alert","Helmet","Modal","setAppElement","document","getElementById","customStyles","content","top","left","right","bottom","marginRight","transform","FocusManage","props","onInputClick","bind","onManualClick","onModalClick","closeModal","state","showResults","showManual","showModal","setState","focus","afterOpenModal"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Alert from \"../components/alert\";\nimport Helmet from \"react-helmet\";\nimport Modal from \"react-modal\";\nModal.setAppElement(document.getElementById(\"root\"));\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nclass FocusManage extends Component {\n  constructor(props) {\n    super(props);\n    this.onInputClick = this.onInputClick.bind(this);\n    this.onManualClick = this.onManualClick.bind(this);\n    this.onModalClick = this.onModalClick.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.state = { showResults: false, showManual: false, showModal: false };\n  }\n\n  onInputClick() {\n    this.setState({ showResults: true });\n  }\n  onManualClick() {\n    this.setState({ showManual: true });\n  }\n  onModalClick() {\n    this.setState({ showModal: true });\n  }\n  closeModal() {\n    this.setState({ showModal: false });\n  }\n  afterOpenModal() {\n    document.getElementById(\"modalHeader\").focus();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 tabIndex=\"-1\">Focus Management</h1>\n        <h2>Manual Managing Focus</h2>\n        <p>\n          This shows the use of manually setting focus for a rendered component\n          using <b>componentDidMount()</b>\n        </p>\n        {this.state.showManual ? (\n          <Alert />\n        ) : (\n          <div>\n            <label htmlFor=\"fname\">Type some text here: </label>\n            <input id=\"fname\" type=\"text\" name=\"fname\" />\n            <br />\n            <button\n              className=\"btn btn-primary btn-large\"\n              onClick={this.onManualClick}\n            >\n              Submit Text\n            </button>\n            <br />\n          </div>\n        )}\n        <br />\n        <h2>Modal</h2>\n        <p>\n          This shows the use of react-modal straight from the react framework.\n          Out of the box this is accessible. The one change made is putting\n          focus on the top level heading in the modal itself.\n        </p>\n        <button\n          className=\"btn btn-primary btn-large\"\n          onClick={this.onModalClick}\n        >\n          Show Modal\n        </button>\n        <Modal\n          isOpen={this.state.showModal}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.closeModal}\n          contentLabel=\"Example Modal\"\n          style={customStyles}\n        >\n          <h2 id=\"modalHeader\" tabIndex=\"-1\">\n            Modal Example\n          </h2>\n          <div>I am a modal and this is my content below</div>\n          <button\n            className=\"btn btn-primary btn-large\"\n            onClick={this.closeModal}\n          >\n            close\n          </button>\n        </Modal>\n        <br />\n        <br />\n        <h2>Auto Focus</h2>\n        <p>\n          This shows the use of autofocus on a input field. Note this only works\n          if the input field is injected onto the page.\n        </p>\n        <button\n          className=\"btn btn-primary btn-large\"\n          onClick={this.onInputClick}\n        >\n          Show Input\n        </button>\n        {this.state.showResults ? (\n          <input type=\"text\" name=\"name\" autoFocus />\n        ) : null}\n      </div>\n    );\n  }\n}\nexport default FocusManage;\n"]},"metadata":{},"sourceType":"module"}