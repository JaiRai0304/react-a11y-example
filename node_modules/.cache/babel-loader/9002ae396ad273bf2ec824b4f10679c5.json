{"ast":null,"code":"import _classCallCheck from \"/Users/trichards/Code/Repos/Training/react-a11y-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/trichards/Code/Repos/Training/react-a11y-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/trichards/Code/Repos/Training/react-a11y-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/trichards/Code/Repos/Training/react-a11y-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/trichards/Code/Repos/Training/react-a11y-example/src/pages/semantic.js\";\nimport React, { Component } from \"react\";\nimport Tablebody from \"../components/tablebody\";\nimport Tableheader from \"../components/tableheader\";\nimport Tableheaderfrag from \"../components/tableheaderfrag\";\nimport Tablebodyfrag from \"../components/tablebodyfrag\";\nimport Customtag from \"../components/customtag\";\n\nvar Semantic = /*#__PURE__*/function (_Component) {\n  _inherits(Semantic, _Component);\n\n  var _super = _createSuper(Semantic);\n\n  function Semantic() {\n    var _this;\n\n    _classCallCheck(this, Semantic);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleClick = function () {\n      alert(\"This worked!\");\n    };\n\n    return _this;\n  }\n\n  _createClass(Semantic, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }, \"Keyboard Navigation\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, \"Extra Divs Added\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, \"In this example below, a component is created with data being added to a table,however the data has a wrapper div that can break the semantics of the overall table.\"), /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Tableheader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Tablebody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, \"Fragments\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, \"In this example below, a component is created with data being added to a table,however instead we use Fragments to now let the natural semantics be placed on the page.\", \" \"), /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Tableheaderfrag, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Tablebodyfrag, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, \"Custom Tags\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, \"In this example below, a button is created using non native semantics and native semantics. With custom tags, users like to add a role of button and tabindex after the fact, however it does not render in react.\", \" \"), /*#__PURE__*/React.createElement(Customtag, {\n        role: \"button\",\n        tabIndex: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary btn-large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, \"Click me!\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, \"Click Events\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, \"In this example below, we use a click event on an actionable item and non-actionable item. And see how keyboard effects them\"), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"btn btn-primary\",\n        tabIndex: \"0\",\n        role: \"button\",\n        onClick: this.handleClick,\n        onKeyPress: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, \"Keyboard Button\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary btn-large\",\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, \"Keyboard Button\"));\n    }\n  }]);\n\n  return Semantic;\n}(Component);\n\nexport default Semantic;","map":{"version":3,"sources":["/Users/trichards/Code/Repos/Training/react-a11y-example/src/pages/semantic.js"],"names":["React","Component","Tablebody","Tableheader","Tableheaderfrag","Tablebodyfrag","Customtag","Semantic","handleClick","alert"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;IAEMC,Q;;;;;;;;;;;;;;;;UACJC,W,GAAc,YAAM;AAClBC,MAAAA,KAAK,CAAC,cAAD,CAAL;AACD,K;;;;;;;6BACQ;AACP,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gLAHF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CARF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oLAGmC,GAHnC,CAjBF,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CAtBF,eA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA9BF,eA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+NAIS,GAJT,CA/BF,eAqCE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,QAAhB;AAAyB,QAAA,QAAQ,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArCF,eAsCE;AAAQ,QAAA,SAAS,EAAC,2BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAtCF,eAwCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAxCF,eAyCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wIAzCF,eA6CE;AACE,QAAA,KAAK,EAAC,iBADR;AAEE,QAAA,QAAQ,EAAC,GAFX;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,OAAO,EAAE,KAAKD,WAJhB;AAKE,QAAA,UAAU,EAAE,KAAKA,WALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA7CF,eAsDE;AACE,QAAA,SAAS,EAAC,2BADZ;AAEE,QAAA,OAAO,EAAE,KAAKA,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAtDF,CADF;AA+DD;;;;EApEoBP,S;;AAuEvB,eAAeM,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Tablebody from \"../components/tablebody\";\nimport Tableheader from \"../components/tableheader\";\nimport Tableheaderfrag from \"../components/tableheaderfrag\";\nimport Tablebodyfrag from \"../components/tablebodyfrag\";\nimport Customtag from \"../components/customtag\";\n\nclass Semantic extends Component {\n  handleClick = () => {\n    alert(\"This worked!\");\n  };\n  render() {\n    return (\n      <div>\n        <h1>Keyboard Navigation</h1>\n        <h2>Extra Divs Added</h2>\n        <p>\n          In this example below, a component is created with data being added to\n          a table,however the data has a wrapper div that can break the\n          semantics of the overall table.\n        </p>\n        <table>\n          <tr>\n            <Tableheader />\n          </tr>\n          <tr>\n            <Tablebody />\n          </tr>\n        </table>\n        <h2>Fragments</h2>\n        <p>\n          In this example below, a component is created with data being added to\n          a table,however instead we use Fragments to now let the natural\n          semantics be placed on the page.{\" \"}\n        </p>\n        <table>\n          <tr>\n            <Tableheaderfrag />\n          </tr>\n          <tr>\n            <Tablebodyfrag />\n          </tr>\n        </table>\n        <h2>Custom Tags</h2>\n        <p>\n          In this example below, a button is created using non native semantics\n          and native semantics. With custom tags, users like to add a role of\n          button and tabindex after the fact, however it does not render in\n          react.{\" \"}\n        </p>\n        <Customtag role=\"button\" tabIndex=\"0\" />\n        <button className=\"btn btn-primary btn-large\">Click me!</button>\n\n        <h2>Click Events</h2>\n        <p>\n          In this example below, we use a click event on an actionable item and\n          non-actionable item. And see how keyboard effects them\n        </p>\n        <div\n          class=\"btn btn-primary\"\n          tabIndex=\"0\"\n          role=\"button\"\n          onClick={this.handleClick}\n          onKeyPress={this.handleClick}\n        >\n          Keyboard Button\n        </div>\n        <button\n          className=\"btn btn-primary btn-large\"\n          onClick={this.handleClick}\n        >\n          Keyboard Button\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Semantic;\n"]},"metadata":{},"sourceType":"module"}