{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/trichards/Code/Repos/Training/react-a11y-example/src/pages/semantic.js\";\n\nimport React from \"react\";\nimport Tablebody from \"../components/tablebody\";\nimport Tableheader from \"../components/tableheader\";\nimport Tableheaderfrag from \"../components/tableheaderfrag\";\nimport Tablebodyfrag from \"../components/tablebodyfrag\";\nimport Customtag from \"../components/customtag\";\nimport DocumentTitle from \"react-document-title\";\n\nvar Semantic = function Semantic() {\n  return /*#__PURE__*/React.createElement(DocumentTitle, {\n    title: \"Title Fixed\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Keyboard Navigation\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"Extra Divs Added\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"In this example below, a component is created with data being added to a table,however the data has a wrapper div that can break the semantics of the overall table.\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tableheader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tablebody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Fragments\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"In this example below, a component is created with data being added to a table,however instead we use Fragments to now let the natural semantics be placed on the page.\", \" \"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tableheaderfrag, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tablebodyfrag, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Custom Tags\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"In this example below, a button is created using non native semantics and native semantics. With custom tags, users like to add a role of button and tabindex after the fact, however it does not render in react.\", \" \"), /*#__PURE__*/React.createElement(Customtag, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-primary btn-large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Click me!\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Click me!\")));\n};\n\nexport default Semantic;","map":{"version":3,"sources":["/Users/trichards/Code/Repos/Training/react-a11y-example/src/pages/semantic.js"],"names":["React","Tablebody","Tableheader","Tableheaderfrag","Tablebodyfrag","Customtag","DocumentTitle","Semantic"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,sBACf,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4KAHF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CARF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gLAGyB,GAHzB,CAjBF,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CAtBF,eA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA9BF,eA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2NAG2E,GAH3E,CA/BF,eAoCE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCF,eAqCE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBArCF,eAsCE;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAtCF,CADF,CADe;AAAA,CAAjB;;AA4CA,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport Tablebody from \"../components/tablebody\";\nimport Tableheader from \"../components/tableheader\";\nimport Tableheaderfrag from \"../components/tableheaderfrag\";\nimport Tablebodyfrag from \"../components/tablebodyfrag\";\nimport Customtag from \"../components/customtag\";\nimport DocumentTitle from \"react-document-title\";\n\nconst Semantic = () => (\n  <DocumentTitle title=\"Title Fixed\">\n    <div>\n      <h1>Keyboard Navigation</h1>\n      <h2>Extra Divs Added</h2>\n      <p>\n        In this example below, a component is created with data being added to a\n        table,however the data has a wrapper div that can break the semantics of\n        the overall table.\n      </p>\n      <table>\n        <tr>\n          <Tableheader />\n        </tr>\n        <tr>\n          <Tablebody />\n        </tr>\n      </table>\n      <h2>Fragments</h2>\n      <p>\n        In this example below, a component is created with data being added to a\n        table,however instead we use Fragments to now let the natural semantics\n        be placed on the page.{\" \"}\n      </p>\n      <table>\n        <tr>\n          <Tableheaderfrag />\n        </tr>\n        <tr>\n          <Tablebodyfrag />\n        </tr>\n      </table>\n      <h2>Custom Tags</h2>\n      <p>\n        In this example below, a button is created using non native semantics\n        and native semantics. With custom tags, users like to add a role of\n        button and tabindex after the fact, however it does not render in react.{\" \"}\n      </p>\n      <Customtag />\n      <div className=\"btn btn-primary btn-large\">Click me!</div>\n      <button className=\"btn btn-primary btn-large\">Click me!</button>\n    </div>\n  </DocumentTitle>\n);\nexport default Semantic;\n"]},"metadata":{},"sourceType":"module"}